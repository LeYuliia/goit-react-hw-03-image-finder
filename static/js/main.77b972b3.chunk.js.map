{"version":3,"sources":["components/Searchbar.js","components/Button.js","components/ImageGalleryItem.js","components/ImageGallery.js","helpers/apiImage.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Button","onLoadMore","onClick","ImageGalleryItem","src","alt","id","ImageGallery","images","map","webformatURL","tags","key","searchQuery","page","axios","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdrop","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","error","largeImageURL","fetchImages","options","apiImage","prevState","catch","finally","onChangeQuery","showModal","tagName","currentImgId","Number","currentImg","find","img","closeModal","prevProps","scrollBy","top","documentElement","clientHeight","behavior","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.77b972b3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  //Передает строку запроса в query во время изменения текстового поля\r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n  //Передает значение query и ресетит query при сабмите формы\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      query: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst Button = ({ onLoadMore }) => (\r\n  <>\r\n    <button className=\"Button\" type=\"button\" onClick={() => onLoadMore()}>\r\n      Load more\r\n    </button>\r\n  </>\r\n);\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({ src, alt, id }) => (\r\n    <img id={id} src={src} alt={alt} className=\"ImageGalleryItem-image\" />\r\n);\r\n\r\nexport default ImageGalleryItem;","import React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onClick }) => (\r\n  <ul onClick={onClick} className=\"ImageGallery\">\r\n    {images.map(({id, webformatURL, tags}) => (\r\n      <li key={id} className=\"ImageGalleryItem\">\r\n      <ImageGalleryItem id={id} src={webformatURL} alt={tags} />\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import axios from \"axios\";\r\n\r\nconst fetchImg = ({ searchQuery = \"\", page = 1 }) => {\r\n  const key='16105184-e3637ab62bfe8e9d6c971f373'\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\r\n    )\r\n    .then((response) => response.data.hits);\r\n};\r\nexport default { fetchImg };\r\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  // Снимаем слушатель, чтобы девктивировать вызов функции при нажатии на 'Esc', если модальное окно не открыто:\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  //Закрытие модального окна при нажатии 'Esc':\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  //Закрытие модального окна при клике на темное поле:\r\n  handleBackdrop = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/Button\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport apiImage from \"./helpers/apiImage\";\nimport Modal from \"./components/Modal\";\n\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\n\nclass App extends Component {\n  state = {\n    images: [],\n    page: 1,\n    searchQuery: \"\",\n    isLoading: false,\n    error: null,\n    largeImageURL: \"\",\n  };\n\n  //Запрос на бэкэнд только в случае изменения searchQuery(происходит при сабмите формы поиска):\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.state;\n    if (searchQuery !== prevState.searchQuery) {\n      this.fetchImages();\n    }\n    if (page !== prevState.page && page !== 2) {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 150,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  fetchImages = () => {\n    const { page, searchQuery } = this.state;\n    const options = { searchQuery, page };\n    this.setState({ isLoading: true });\n    apiImage\n      .fetchImg(options)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  // Сброс значений images и page, и добавление значения поиска в searchQuery при новом запросе\n  //(значение забирается при сабмите из  Searchbar=>state=>query ф-я handleSubmit):\n  onChangeQuery = (query) => {\n    this.setState({\n      images: [],\n      page: 1,\n      searchQuery: query,\n      error: null,\n    });\n  };\n\n  /*======        Открыть (showModal) и закрыть (closeModal) модальное окно.    =========*/\n  //Добавляет значение в  largeImageURL при клике на картинку:\n  showModal = (e) => {\n    if (e.target.tagName === \"IMG\") {\n      const { images } = this.state;\n      const currentImgId = Number(e.target.id);\n      const currentImg = images.find((img) => img.id === currentImgId);\n\n      this.setState({\n        largeImageURL: currentImg.largeImageURL,\n      });\n    }\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageURL: \"\" });\n  };\n\n  render() {\n    const { images, isLoading, error, largeImageURL } = this.state;\n    return (\n      <>\n        {error && <p>Somethingth goes wrong!</p>}\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <ImageGallery images={images} onClick={this.showModal} />\n        {isLoading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Circles\"\n            color=\"#00BFFF\"\n            height={80}\n            width={80}\n          />\n        )}\n\n        {/* Рендер кнопки  LoadMore после окончания рендера изображений с бекенда:*/}\n        {images.length > 0 && !isLoading && (\n          <Button onLoadMore={this.fetchImages} />\n        )}\n\n        {/* Если в largeImageURL есть свойство, то загружается модальное окно.\n        (Свойство в largeImageURL добавляется при клике на картинку - showModal):*/}\n        {largeImageURL.length > 0 && \n          <Modal onClose={this.closeModal}>\n            <img src={largeImageURL} alt={images.tags} />\n          </Modal>\n        }\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}