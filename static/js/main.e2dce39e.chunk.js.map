{"version":3,"sources":["components/Searchbar.js","components/Button.js","components/ImageGalleryItem.js","components/ImageGallery.js","helpers/apiImage.js","components/Modal.js","App.js","index.js"],"names":["Searchbar","state","query","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","reset","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Button","onLoadMore","onClick","ImageGalleryItem","src","alt","id","ImageGallery","images","onClickImage","map","webformatURL","tags","key","searchQuery","page","axios","get","then","response","data","hits","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdrop","target","window","addEventListener","removeEventListener","createPortal","children","App","isLoading","error","largeImageURL","fetchImages","options","apiImage","prevState","scrollBy","top","documentElement","clientHeight","behavior","catch","finally","onChangeQuery","showModal","currentImg","find","img","closeModal","prevProps","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"oSA4CeA,E,4MAzCbC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEH,MAAOE,EAAEE,cAAcC,S,EAGzCC,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,OAC/B,EAAKU,S,EAGPA,MAAQ,WACN,EAAKP,SAAS,CACZH,MAAO,S,uDAIT,OACE,4BAAQW,UAAU,aAChB,0BAAMA,UAAU,aAAaF,SAAUG,KAAKN,cAC1C,4BAAQO,KAAK,SAASF,UAAU,qBAC9B,0BAAMA,UAAU,2BAAhB,WAGF,2BACEA,UAAU,mBACVE,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,SAAUL,KAAKX,qB,GAlCHiB,aCQTC,EARA,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACb,oCACE,4BAAQT,UAAU,SAASE,KAAK,SAASQ,QAAS,kBAAMD,MAAxD,eCEWE,EAJU,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,IAAKC,EAAb,EAAaA,GAAb,OACvB,yBAAKA,GAAIA,EAAIF,IAAKA,EAAKC,IAAKA,EAAKb,UAAU,4BCU9Be,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAgBC,EAAnB,EAAWP,QAAX,OACnB,wBAAIV,UAAU,gBACXgB,EAAOE,KAAI,gBAAGJ,EAAH,EAAGA,GAAIK,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAArB,OACV,wBAAIC,IAAKP,EAAIJ,QAAS,kBAAIO,EAAaH,IAAKd,UAAU,oBACpD,kBAAC,EAAD,CAAkBc,GAAIA,EAAIF,IAAKO,EAAcN,IAAKO,U,iBCG3C,EARE,SAAC,GAAoC,IAAD,IAAjCE,mBAAiC,MAAnB,GAAmB,MAAfC,YAAe,MAAR,EAAQ,EAEnD,OAAOC,IACJC,IADI,qCAE2BH,EAF3B,iBAE+CC,EAF/C,gBADK,qCACL,yDAIJG,MAAK,SAACC,GAAD,OAAcA,EAASC,KAAKC,SCLhCC,EAAYC,SAASC,cAAc,eAEpBC,E,4MASnBC,cAAgB,SAAC3C,GACA,WAAXA,EAAE4C,MACJ,EAAKtC,MAAMuC,W,EAIfC,eAAiB,SAAC9C,GACZA,EAAEE,gBAAkBF,EAAE+C,QACxB,EAAKzC,MAAMuC,W,kEAfbG,OAAOC,iBAAiB,UAAWvC,KAAKiC,iB,6CAIxCK,OAAOE,oBAAoB,UAAWxC,KAAKiC,iB,+BAe3C,OAAOQ,uBACL,yBAAK1C,UAAU,UAAUU,QAAST,KAAKoC,gBACrC,yBAAKrC,UAAU,SAASC,KAAKJ,MAAM8C,WAErCb,O,GAzB6BvB,a,yBCuGpBqC,E,4MAjGbxD,MAAQ,CACN4B,OAAQ,GACRO,KAAM,EACND,YAAa,GACbuB,WAAW,EACXC,MAAO,KACPC,cAAe,I,EAUjBC,YAAc,WAAO,IAAD,EACY,EAAK5D,MAA3BmC,EADU,EACVA,KACF0B,EAAU,CAAE3B,YAFA,EACJA,YACiBC,QAC/B,EAAK/B,SAAS,CAAEqD,WAAW,IAC3BK,EACYD,GACTvB,MAAK,SAACV,GACL,EAAKxB,UAAS,SAAC2D,GAAD,MAAgB,CAC5BnC,OAAO,GAAD,mBAAMmC,EAAUnC,QAAhB,YAA2BA,IACjCO,KAAM4B,EAAU5B,KAAO,SAG1BG,MAAM,WACDH,EAAK,GACPgB,OAAOa,SAAS,CACdC,IAAKtB,SAASuB,gBAAgBC,aAAe,IAC7CC,SAAU,cAKfC,OAAM,SAACX,GAAD,OAAW,EAAKtD,SAAS,CAAEsD,aACjCY,SAAQ,kBAAM,EAAKlE,SAAS,CAAEqD,WAAW,Q,EAI9Cc,cAAgB,SAACtE,GACf,EAAKG,SAAS,CACZwB,OAAQ,GACRO,KAAM,EACND,YAAajC,EACbyD,MAAO,Q,EAIXc,UAAY,SAAC9C,GAAQ,IAGV+C,EADa,EAAKzE,MAAhB4B,OACkB8C,MAAK,SAACC,GAAD,OAASA,EAAIjD,KAAOA,KAEpD,EAAKtB,SAAS,CACZuD,cAAec,EAAWd,iB,EAKhCiB,WAAa,WACX,EAAKxE,SAAS,CAAEuD,cAAe,M,iEAtDdkB,EAAWd,GACLlD,KAAKb,MAApBkC,cACY6B,EAAU7B,aAC5BrB,KAAK+C,gB,+BAsDC,IAAD,EAC6C/C,KAAKb,MAAjD4B,EADD,EACCA,OAAQ6B,EADT,EACSA,UAAWC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,cAClC,OACE,oCACGD,GAAS,qDAA2BA,GACrC,kBAAC,EAAD,CAAWhD,SAAUG,KAAK0D,gBAC1B,kBAAC,EAAD,CAAc3C,OAAQA,EAAQN,QAAST,KAAK2D,YAC3Cf,GACC,kBAAC,IAAD,CACE7C,UAAU,SACVE,KAAK,UACLgE,MAAM,UACNC,OAAQ,GACRC,MAAO,KAIVpD,EAAOqD,OAAS,IAAMxB,GACrB,kBAAC,EAAD,CAAQpC,WAAYR,KAAK+C,cAG1BD,EAAcsB,OAAS,GACtB,kBAAC,EAAD,CAAOjC,QAASnC,KAAK+D,YACnB,yBAAKpD,IAAKmC,EAAelC,IAAKG,EAAOI,a,GA1F/Bb,aCLlB+D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFzC,SAAS0C,eAAe,W","file":"static/js/main.e2dce39e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n  \r\n  handleChange = (e) => {\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n \r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.query);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      query: \"joy\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleChange}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\n\nconst Button = ({ onLoadMore }) => (\n  <>\n    <button className=\"Button\" type=\"button\" onClick={() => onLoadMore()}>\n      Load more\n    </button>\n  </>\n);\n\nexport default Button;\n","import React from \"react\";\n\nconst ImageGalleryItem = ({ src, alt, id }) => (\n  <img id={id} src={src} alt={alt} className=\"ImageGalleryItem-image\" />\n);\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGallery = ({ images, onClick:onClickImage }) => (\n  <ul className=\"ImageGallery\">\n    {images.map(({ id, webformatURL, tags }) => (\n      <li key={id} onClick={()=>onClickImage(id)} className=\"ImageGalleryItem\">\n        <ImageGalleryItem id={id} src={webformatURL} alt={tags} />\n      </li>\n    ))}\n  </ul>\n);\n\nexport default ImageGallery;\n","import axios from \"axios\";\n\nconst fetchImg = ({ searchQuery = \"\", page = 1 }) => {\n  const key = \"16105184-e3637ab62bfe8e9d6c971f373\";\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then((response) => response.data.hits);\n};\nexport default { fetchImg };\n","import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdrop = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Searchbar from \"./components/Searchbar\";\r\nimport Button from \"./components/Button\";\r\nimport ImageGallery from \"./components/ImageGallery\";\r\nimport apiImage from \"./helpers/apiImage\";\r\nimport Modal from \"./components/Modal\";\r\n\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    images: [],\r\n    page: 1,\r\n    searchQuery: \"\",\r\n    isLoading: false,\r\n    error: null,\r\n    largeImageURL: \"\",\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { searchQuery} = this.state;\r\n    if (searchQuery !== prevState.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  fetchImages = () => {\r\n    const { page, searchQuery } = this.state;\r\n    const options = { searchQuery, page };\r\n    this.setState({ isLoading: true });\r\n    apiImage\r\n      .fetchImg(options)\r\n      .then((images) => {\r\n        this.setState((prevState) => ({\r\n          images: [...prevState.images, ...images],\r\n          page: prevState.page + 1,\r\n        }));  \r\n      })\r\n      .then( ()=>{\r\n        if (page>1) {\r\n          window.scrollBy({\r\n            top: document.documentElement.clientHeight - 150,\r\n            behavior: \"smooth\",\r\n          });\r\n        }\r\n      }\r\n      )\r\n      .catch((error) => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n \r\n  onChangeQuery = (query) => {\r\n    this.setState({\r\n      images: [],\r\n      page: 1,\r\n      searchQuery: query,\r\n      error: null,\r\n    });\r\n  };\r\n\r\n  showModal = (id) => {\r\n    \r\n       const { images } = this.state;\r\n       const currentImg = images.find((img) => img.id === id);\r\n     \r\n      this.setState({\r\n        largeImageURL: currentImg.largeImageURL\r\n      });\r\n   \r\n  };\r\n\r\n  closeModal = () => {\r\n    this.setState({ largeImageURL: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { images, isLoading, error, largeImageURL } = this.state;\r\n    return (\r\n      <>\r\n        {error && <p>Somethingth goes wrong!{error}</p>}\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        <ImageGallery images={images} onClick={this.showModal} />\r\n        {isLoading && (\r\n          <Loader\r\n            className=\"Loader\"\r\n            type=\"Circles\"\r\n            color=\"#00BFFF\"\r\n            height={80}\r\n            width={80}\r\n          />\r\n        )}\r\n\r\n        {images.length > 0 && !isLoading && (\r\n          <Button onLoadMore={this.fetchImages} />\r\n        )}\r\n\r\n        {largeImageURL.length > 0 && (\r\n          <Modal onClose={this.closeModal}>\r\n            <img src={largeImageURL} alt={images.tags} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}